AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: A sample SAM template for deploying Lambda functions.

Resources:
# Details about the myDateTimeFunction Lambda function
  RedisPythonLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      codeUri: src/
      Handler: lambda_function.lambda_handler
      Runtime: pthon3.8
      Events: 
        MyRedisEvent:
          Type: Redis
          Properties:
            Description: "Redis event source for myDateTimeFunction"
            Endpoints:
              - Fn::GetAtt: [ RedisCluster, RedisEndpointAddress ]
            Port: 6379
            AuthToken: "myAuthToken"
            BatchSize: 1
        RedisPythonApi:
          Type: Api
          Properties:
            Path: /redis-python
            Method: GET
# Instructs your redisPythonLambdaFunction is published to an alias named "live".      
      AutoPublishAlias: live
# Grants this function permission to call lambda:InvokeFunction
      Policies:
        - Version: "2012-10-17"
          Statement: 
          - Effect: "Allow"
            Action: 
              - "lambda:InvokeFunction"
            Resource: '*'
      DeploymentPreference:
# Specifies the deployment configuration      
          Type: Linear10PercentEvery1Minute

Outputs:
  RedisPythonApi:
    Description: "API Gateway endpoint URL for Dev stage for RedisPython function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/redis-python/"
  RedisPythonLambdaFunction:
    Description: "RedisPython Lambda Function ARN"
    Value: !GetAtt redisPythonLambdaFunction.Arn
  RedisPythonLambdaFunctionIamRole:
    Description: "Implicit IAM Role created for RedisPython function"
    Value: !GetAtt RedisPythonLambdaFunctionRole.Arn